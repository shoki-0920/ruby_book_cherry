=begin
 ここはコメントです。
 ここもコメントです。
 ここもコメントです。
=end

#これもコメントです。
# ctrl + /でコメントアウト

#/nで改行、'の場合は無視
数値には_を含めることができます。_は無視されるので、大きな数の区切り文字として使うと便利です。  1_000_000_000 #=> 1000000000

変数に整数が入っている場合は、to_fメソッドを呼ぶことで整数から小数に変更することができます。  n = 1
 n.to_f     #=> 1.0
 n.to_f / 2 #=> 0.5


 0.1 * 3.0 #=> 0.30000000000000004 

# Rationalクラスを使うと小数ではなく「10分の3」という計算結果が返る
 0.1r * 3.0r #=> (3/10)

 # Rationalクラスであれば期待したとおりに値の比較ができる
 0.1r * 3r == 0.3 #=> true

 0.1r * 3r <= 0.3 #=> true

%q!------------! #これでシングルクオートと囲んだことと同じになる

#ヒアドキュメント
a = <<TEXT
 これはヒアドキュメントです。
 複数行にわたる長い文字列を作成するのに便利です。
 TEXT
 puts a
 #=> これはヒアドキュメントです。
 #   複数行にわたる長い文字列を作成するのに便利です。

def some_method
   <<~TEXT
     これはヒアドキュメントです。
     <<~を使うと内部文字列のインデント部分が無視されます。
   TEXT
 end

 puts some_method
 #=> これはヒアドキュメントです。
 #   <<~を使うと内部文字列のインデント部分が無視されます。



